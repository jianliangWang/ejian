package ${package.Controller};

import com.baomidou.mybatisplus.core.metadata.IPage;

import org.springframework.security.access.prepost.PreAuthorize;
import com.ejian.core.util.ResultJson;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 控制层
 * </p>
 *
 * @author ${author}
 * @since ${date}
 * @version
 *
 */
@Tag(name = "")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass}<${table.entityName}> {
#else
public class ${table.controllerName} {
#end
private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

private final ${table.serviceName} ${table.entityPath}Service;

public ${table.controllerName}(${table.serviceName} ${table.entityPath}Service) {
    this.${table.entityPath}Service = ${table.entityPath}Service;
    }

    @Operation(summary = "列表")
    @PostMapping("list")
    @PreAuthorize("hasAnyAuthority('-list')")
    public ResultJson list(){
        IPage<${table.entityName}> pageList = ${table.entityPath}Service.list(getPage());
        return ResultJson.success(pageList);
    }

    @Operation(summary = "新增")
    @PostMapping("add")
    @PreAuthorize("hasAnyAuthority('-add')")
    public ResultJson add(${table.entityName} ${table.entityPath}){
        ${table.entityPath}Service.add(${table.entityPath});
        return ResultJson.success();
    }

    @Operation(summary = "修改")
    @PostMapping("update")
    @PreAuthorize("hasAnyAuthority('-update')")
    public ResultJson update(${table.entityName} ${table.entityPath}){
        ${table.entityPath}Service.updateById(${table.entityPath});
        return ResultJson.success();
    }

    @Operation(summary = "删除")
    @PostMapping("delete")
    @PreAuthorize("hasAnyAuthority('-delete')")
    public ResultJson delete(Integer id){
        ${table.entityPath}Service.removeById(id);
        return ResultJson.success();
    }
}
#end
